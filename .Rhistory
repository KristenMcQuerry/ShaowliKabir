install.packages("tidyverse")
install.packages("nycflights13")
## load libraries
library(tidyverse)
library(nycflights13)
## dataset for assignment
flights
install.packages("tidyverse")
install.packages("nycflights13")
## load libraries
library(tidyverse)
library(nycflights13)
## dataset for assignment
flights
## checking variable ##
glimpse(flights)
## dataset for assignment
f=flights
View(f)
## checking variable ##
glimpse(hflights)
flights %>%
arrange(dep_delay+arr_delay)
flights %>%
arrange(desc(dep_delay+arr_delay))
flights %>%
arrange(desc(dep_delay+arr_delay)) %>%
select(carrier)
### challenge ##
flights %>%
group_by(carrier,dest) %>%
summarize(n=n())
flights %>%
group_by(carrier,dest) %>%
summarize(n=n()) %>%
arrange(desc(dep_delay+arr_delay))
flights %>%
arrange(desc(dep_delay+arr_delay)) %>%
group_by(carrier,dest) %>%
summarize(n=n())
### challenge ##
g=flights %>%
arrange(desc(dep_delay+arr_delay)) %>%
group_by(carrier,dest) %>%
summarize(n=n())
View(g)
######## 5 ##########
flights %>%
group_by(dep_delay<1) %>%
summarise(n_flights=n_distinct(tailnum))
######## 5 ##########
g=flights %>%
group_by(dep_delay<1) %>%
summarise(n_flights=n_distinct(tailnum))
View(g)
View(f)
###### 6 #######
flights %>%
arrange(desc(dep_delay+arr_delay)) %>%
select(tailnum)
install.packages("tidyverse")
install.packages("nycflights13")
## load libraries
library(tidyverse)
library(nycflights13)
flights %>%
arrange(desc(dep_delay+arr_delay)) %>%
select(tailnum)
###### 6 #######
flights %>%
arrange(desc(dep_delay+arr_delay)) %>%
select(tailnum)
## load libraries
library(tidyverse)
library(nycflights13)
## dataset for assignment
f=flights
## checking variable ##
glimpse(flights)
flights %>%
filter(air_time)
flights %>%
filter(air_time==0)
library(nycflights13)
flights
hflights
flights
install.packages("tidyverse")
install.packages("nycflights13")
## load libraries
library(tidyverse)
library(nycflights13)
## dataset for assignment
f=flights
## checking variable ##
glimpse(flights)
############ 3 ###########
flights %>%
filter(is.na(air_time))
############ 3 ###########
flights %>%
filter(is.na(air_time)) %>%
select(is.na(air_time))
############ 3 ###########
flights %>%
select(is.na(air_time))
############ 3 ###########
flights %>%
select(is.na(air_time))
############ 3 ###########
flights %>%
filter(is.na(air_time)==T)
############ 3 ###########
#cancelled flights
flights %>%
filter(is.na(air_time)==NA)
############ 3 ###########
#cancelled flights
flights %>%
filter(is.na(air_time))
############ 3 ###########
#cancelled flights
flights %>%
filter(is.na(air_time)==T)
flights %>%
group_by(day) %>%
#filter(is.na(air_time)==T) %>%
summarise(n=n(is.na(air_time)==T))
flights %>%
group_by(day)
#cancelled flights
flights %>%
group_by(day,is.na(air_time)==T)
############ 3 ###########
#cancelled flights
flights %>%
group_by(day,is.na(air_time)==T) %>%
# filter(is.na(air_time)==T) %>%
select(day,air_time)
############ 3 ###########
#cancelled flights
flights %>%
group_by(day,is.na(air_time)==T) %>%
# filter(is.na(air_time)==T) %>%
select(day,is.na(air_time)==T)
############ 3 ###########
#cancelled flights
flights %>%
group_by(day,air_time) %>%
# filter(is.na(air_time)==T) %>%
select(day,is.na(air_time)==T)
############ 3 ###########
#cancelled flights
flights %>%
group_by(day) %>%
filter(is.na(air_time)==T)
?frequency
############ 3 ###########
#cancelled flights
flights %>%
group_by(day) %>%
filter(is.na(air_time)==T) %>%
summarise(count(air_time,"NA"))
############ 3 ###########
#cancelled flights
flights %>%
group_by(day) %>%
filter(is.na(air_time)==T) %>%
summarise(n=n_distinct(air_time))
############ 3 ###########
#cancelled flights
flights %>%
group_by(day) %>%
filter(is.na(air_time)==T) %>%
summarise(n=n_distinct(air_time=="NA"))
############ 3 ###########
#cancelled flights
flights %>%
group_by(day) %>%
filter(is.na(air_time)==T) %>%
summarise(n=n(air_time=="NA"))
############ 3 ###########
#cancelled flights
flights %>%
group_by(day) %>%
filter(is.na(air_time)==T) %>%
summarise(n=n(ia.na(air_time)))
############ 3 ###########
#cancelled flights
flights %>%
group_by(day) %>%
filter(is.na(air_time)==T) %>%
summarise(n=n(is.na(air_time)))
############ 3 ###########
#cancelled flights
flights %>%
group_by(day) %>%
# filter(is.na(air_time)==T) %>%
summarise(n=n(is.na(air_time)))
############ 3 ###########
#cancelled flights
flights %>%
group_by(day) %>%
summarise(n=n(is.na(air_time)==T))
############ 3 ###########
#cancelled flights
flights %>%
group_by(day) %>%
select(is.na(air_time)==T) %>%
summarise(n=n(air_time))
############ 3 ###########
#cancelled flights
flights %>%
group_by(day) %>%
summarise(n=sum(is.na(air_time)))
############ 3 ###########
#cancelled flights
flights %>%
group_by(day) %>%
summarise(count_cancelled=sum(is.na(air_time))) %>%
plot(count_cancelled)
ggplot(calcelled,aes(x=count_cancelled))+
geom_histogram(bins=10)
ggplot(cancelled,aes(x=count_cancelled))+
geom_histogram(bins=10)
cancelled=flights %>%
group_by(day) %>%
summarise(count_cancelled=sum(is.na(air_time))) %>%
ggplot(cancelled,aes(x=count_cancelled))+
geom_histogram(bins=10)
cancelled=flights %>%
group_by(day) %>%
summarise(count_cancelled=sum(is.na(air_time)))
ggplot(cancelled,aes(x=count_cancelled))+
geom_histogram(bins=10)
#looking for the pattern
ggplot(cancelled,aes(x=day,y=count_cancelled))+
geom_histogram(bins=10)
ggplot(cancelled,aes(x=day,y=count_cancelled))+
geom_histogram()
#looking for the pattern
ggplot(cancelled,aes(x=day,y=count_cancelled))+
geom_dotplot()
ggplot(cancelled,aes(x=day,y=count_cancelled))+
geom_histogram()
ggplot(cancelled,aes(x=day,y=count_cancelled))+
geom_histogram()
#proportion of cancellation
flights %>%
group_by(day) %>%
summarise(count_cancelled=sum(is.na(air_time))/sum(air_time))
summarise(prop_cancel=sum(is.na(air_time))/(sum(air_time))
cancelled=flights %>%
group_by(day) %>%
summarise(count_cancelled=sum(is.na(air_time)))
View(cancelled)
summarise(prop_cancel=sum(is.na(air_time))/(sum(is.na(air_time))
cancelled=flights %>%
group_by(month,day) %>%
summarise(count_cancelled=sum(is.na(air_time)))
View(cancelled)
summarise(prop_cancel=sum(is.na(air_time))/sum(is.na(air_time))+sum(is.na(air_time)==F)
#proportion of cancellation
flights %>%
group_by(day) %>%
summarise(prop_cancel=sum(is.na(air_time))/sum(is.na(air_time))+sum(is.na(air_time)==F))
#proportion of cancellation
flights %>%
group_by(day) %>%
summarise(prop_cancel=sum(is.na(air_time))/(sum(is.na(air_time))+sum(is.na(air_time)==F)))
#cancelled flights
cancelled=flights %>%
group_by(month,day) %>%
summarise(count_cancelled=sum(is.na(air_time)))
#pattern
#looking for the pattern
ggplot(cancelled,aes(x=day,y=count_cancelled))+
geom_histogram()
flights %>%
group_by(month,day) %>%
summarise(count_cancelled=sum(is.na(air_time)))
ggplot(cancelled,aes(x=day,y=count_cancelled))+
geom_histogram()
#pattern
#looking for the pattern
ggplot(cancelled,aes(x=day,y=count_cancelled,color=month))+
geom_histogram()
ggplot(cancelled,aes(x=day,y=count_cancelled,color=month))+
geom_point()
delay=flights%>%
group_by(month,day) %>%
summarise(del=mean(dep_delay,na.rm=T))
prop=flights %>%
group_by(month,day) %>%
summarise(prop_cancel=sum(is.na(air_time))/(sum(is.na(air_time))+sum(is.na(air_time)==F)))
delay=flights%>%
group_by(month,day) %>%
summarise(del=mean(dep_delay,na.rm=T))
anova(lm(prop_cancel$prop,del$delay))
prop=flights %>%
group_by(month,day) %>%
summarise(prop_cancel=sum(is.na(air_time))/(sum(is.na(air_time))+sum(is.na(air_time)==F)))
delay=flights%>%
group_by(month,day) %>%
summarise(del=mean(dep_delay,na.rm=T))
anova(lm(prop_cancel$prop,del$delay))
anova(lm(prop$prop_cancel,delay$del))
prop=flights %>%
group_by(month,day) %>%
summarise(prop_cancel=sum(is.na(air_time))/(sum(is.na(air_time))+sum(is.na(air_time)==F)))
delay=flights%>%
group_by(month,day) %>%
summarise(del=mean(dep_delay,na.rm=T))
anova(lm(prop$prop_cancel,delay$del))
View(delay)
anova(lm(prop$prop_cancel~delay$del))
flights %>%
arrange(desc(dep_delay+arr_delay)) %>%
select(carrier)
flights %>%
arrange(desc(dep_delay+arr_delay)) %>%
select(carrier,dep_delay)
flights %>%
group_by(carrier) %>%
summarise(delays=mean(dep_delay,na.rm=T)) %>%
arrange(desc(delay))
flights %>%
group_by(carrier) %>%
summarise(delays=mean(dep_delay,na.rm=T)) %>%
arrange(desc(delay))
flights %>%
group_by(carrier) %>%
summarise(delays=mean(dep_delay,na.rm=T)) %>%
arrange(desc(delay))
flights %>%
group_by(carrier) %>%
summarise(delays=mean(dep_delay,na.rm=T)) %>%
arrange(desc(delays))
### challenge ##
flights %>%
group_by(carrier,dest) %>%
summarise(delays=mean(dep_delay,na.rm=T))
###### 6 #######
#worst on record
flights %>%
group_by(tailnum) %>%
summarise(delays=mean(dep_delay,na.rm=T)) %>%
arrange(desc(delays))
flights %>%
group_by(sched_dep_time) %>%
summarise(delays=mean(dep_delay,na.rm=T)) %>%
arrange(desc(delays))
########## 7 ########
#time of day should you fly if you want to avoid delays
flights %>%
group_by(sched_dep_time) %>%
summarise(delays=mean(dep_delay,na.rm=T)) %>%
arrange(delays)
########## 7 ########
#time of day should you fly if you want to avoid delays
flights %>%
group_by(hour) %>%
summarise(delays=mean(dep_delay,na.rm=T)) %>%
arrange(delays)
flights %>%
group_by(dest) %>%
summarise(delays=mean(dep_delay,na.rm=T))
##### 8 #########
#For each destination, compute the total minutes of delay
flights %>%
group_by(dest) %>%
summarise(delays=sum(dep_delay,na.rm=T))
flights %>%
group_by(dest,tailnum) %>%
summarise(delays=sum(dep_delay,na.rm=T))
#For each flight, compute the proportion of the total delay for its destination.
flights %>%
group_by(dest,tailnum) %>%
summarise(prop_cancel=sum(is.na(air_time))/(sum(is.na(air_time))+sum(is.na(air_time)==F)))
#For each flight, compute the proportion of the total delay for its destination.
flights %>%
group_by(carrier,flight) %>%
summarise(propdel=dep_delay/sum(dep_delay))
#For each flight, compute the proportion of the total delay for its destination.
flights %>%
group_by(carrier,flight) %>%
summarise(propdel=sum(dep_delay))
#For each flight, compute the proportion of the total delay for its destination.
flights %>%
group_by(carrier,flight) %>%
summarise(propdel=sum(dep_delay,na.rm=T))
#For each flight, compute the proportion of the total delay for its destination.
flights %>%
group_by(carrier,flight,dest) %>%
summarise(propdel=sum(dep_delay,na.rm=T))
#For each flight, compute the proportion of the total delay for its destination.
flights %>%
group_by(carrier,flight,dest) %>%
summarise(propdel=dep_delay/sum(dep_delay,na.rm=T))
#For each flight, compute the proportion of the total delay for its destination.
flights %>%
group_by(dest) %>%
summarise(delays=sum(dep_delay,na.rm=T)) %>%
group_by(carrier,flight) %>%
summarise(propdel=delays/sum(dep_delay,na.rm=T))
flights %>%
group_by(dest) %>%
summarise(delays=sum(dep_delay,na.rm=T)) %>%
filter(carrier,flight,dest) %>%
summarise(propdel=delays/sum(dep_delay,na.rm=T))
flights %>%
group_by(dest) %>%
summarise(delays=sum(dep_delay,na.rm=T)) %>%
group_by(carrier,flight) %>%
summarise(propdel=delays/sum(dep_delay,na.rm=T))
flights %>%
group_by(dest,flight) %>%
summarise(propdel=dep_Delay/sum(dep_delay,na.rm=T))
flights %>%
group_by(dest,flight) %>%
summarise(propdel=dep_delay/sum(dep_delay,na.rm=T))
flights %>%
group_by(dest) %>%
summarise(delays=sum(dep_delay,na.rm=T)) %>%
group_by(carrier,flight) %>%
summarise(propdel=delays/sum(dep_delay,na.rm=T))
View(f)
View(f)
#most delayed flight in air
flights %>%
mutate(air_delay=(sched_arr_time-sched_dep_time)-air_time) %>%
select(carrier,air_delay) %>%
arrange(air_delay)
flights %>%
mutate(air_delay=(sched_arr_time-sched_dep_time)-air_time) %>%
select(carrier,air_delay,origin,dest) %>%
arrange(air_delay)
View(f)
#most delayed flight in air
flights %>%
mutate(air_delay=arr_delay-dep_delay) %>%
select(carrier,air_delay,origin,dest) %>%
arrange(desc(air_delay))
flights %>%
mutate(air_delay=arr_delay-dep_delay) %>%
select(carrier,air_delay,origin,dest) %>%
arrange(air_delay)
View(f)
flights %>%
mutate(air_delay=arr_delay-dep_delay) %>%
select(carrier,air_delay,origin,dest) %>%
arrange(air_delay)
flights %>%
mutate(air_delay=dep_delay-arr_delay) %>%
select(carrier,air_delay,origin,dest) %>%
arrange(air_delay)
flights %>%
mutate(air_delay=dep_delay-arr_delay) %>%
filter(arr_delay>dep_delay) %>%
select(carrier,air_delay,origin,dest) %>%
arrange(air_delay)
flights %>%
mutate(air_delay=dep_delay-arr_delay) %>%
filter(air_delay>dep_delay) %>%
select(carrier,air_delay,origin,dest) %>%
arrange(air_delay)
flights %>%
mutate(air_delay=dep_delay-arr_delay) %>%
filter(air_delay<0) %>%
select(carrier,air_delay,origin,dest) %>%
arrange(air_delay)
